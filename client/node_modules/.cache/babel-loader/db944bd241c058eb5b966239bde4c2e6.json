{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'; // create the api\n\nexport const appApi = createApi({\n  reducerPath: 'appApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3000'\n  }),\n  endpoints: builder => ({\n    signup: builder.mutation({\n      query: user => ({\n        url: '/users/signup',\n        method: 'POST',\n        body: user\n      })\n    }),\n    login: builder.mutation({\n      query: user => ({\n        url: '/users/login',\n        method: 'POST',\n        body: user\n      })\n    }),\n    // creating product\n    createProduct: builder.mutation({\n      query: product => ({\n        url: '/products',\n        body: product,\n        method: \"POST\"\n      })\n    }),\n    deleteProduct: builder.mutation({\n      query: _ref => {\n        let {\n          product_id,\n          user_id\n        } = _ref;\n        return {\n          url: `/products/${product_id}`,\n          body: {\n            user_id\n          },\n          method: \"DELETE\"\n        };\n      }\n    }),\n    updateProduct: builder.mutation({\n      query: product => ({\n        url: `/products/${product.id}`,\n        body: product,\n        method: \"PATCH\"\n      })\n    }),\n    // add to Cart\n    addToCart: builder.mutation({\n      query: cartInfo => ({\n        url: \"/products/add-to-cart\",\n        body: cartInfo,\n        method: \"POST\"\n      })\n    }),\n    // remove from Cart\n    removeFromCart: builder.mutation({\n      query: cartInfo => ({\n        url: \"/products/remove-from-cart\",\n        body: cartInfo,\n        method: \"POST\"\n      })\n    }),\n    // increase Cart product\n    increaseCartProduct: builder.mutation({\n      query: body => ({\n        url: \"/products/increase-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // decrease Cart product\n    decreaseCartProduct: builder.mutation({\n      query: body => ({\n        url: \"/products/decrease-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    createOrder: builder.mutation({\n      query: body => ({\n        url: '/orders',\n        body,\n        method: \"POST\"\n      })\n    })\n  })\n});\nexport const {\n  useSignupMutation,\n  useLoginMutation,\n  useCreateProductMutation,\n  useAddToCartMutation,\n  useDecreaseCartProductMutation,\n  useIncreaseCartProductMutation,\n  useRemoveFromCartMutation,\n  useCreateOrderMutation,\n  useDeleteProductMutation,\n  useUpdateProductMutation\n} = appApi;\nexport default appApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","appApi","reducerPath","baseQuery","baseUrl","endpoints","builder","signup","mutation","query","user","url","method","body","login","createProduct","product","deleteProduct","product_id","user_id","updateProduct","id","addToCart","cartInfo","removeFromCart","increaseCartProduct","decreaseCartProduct","createOrder","useSignupMutation","useLoginMutation","useCreateProductMutation","useAddToCartMutation","useDecreaseCartProductMutation","useIncreaseCartProductMutation","useRemoveFromCartMutation","useCreateOrderMutation","useDeleteProductMutation","useUpdateProductMutation"],"sources":["C:/Users/kandw/OneDrive/Desktop/Ecommerce/ecomern-frontend-main/src/services/appApi.js"],"sourcesContent":["import {createApi,fetchBaseQuery} from '@reduxjs/toolkit/query/react';\n\n// create the api\n\nexport const appApi=createApi({\n    reducerPath:'appApi',\n    baseQuery:fetchBaseQuery({baseUrl:'http://localhost:3000'}),\n    endpoints:(builder)=>({\n        signup:builder.mutation({\n            query:user=>({\n                url:'/users/signup',\n                method:'POST',\n                body:user,\n            })\n        }),\n        login:builder.mutation({\n            query:user=>({\n                url:'/users/login',\n                method:'POST',\n                body:user\n            }),\n        }),\n        // creating product\n        createProduct:builder.mutation({\n            query:(product)=>({\n                url:'/products',\n                body:product,\n                method:\"POST\",\n            })\n        }),\n\n        deleteProduct:builder.mutation({\n            query:({product_id,user_id})=>({\n                url:`/products/${product_id}`,\n                body:{user_id},\n                method:\"DELETE\"\n            })\n        }),\n\n        updateProduct:builder.mutation({\n            query:(product)=>({\n                url:`/products/${product.id}`,\n                body:product,\n                method:\"PATCH\"\n            })\n        }),\n\n        // add to Cart\n        addToCart:builder.mutation({\n            query:(cartInfo)=>({\n                url:\"/products/add-to-cart\",\n                body:cartInfo,\n                method:\"POST\",\n            })\n        }),\n        // remove from Cart\n        removeFromCart:builder.mutation({\n            query:(cartInfo)=>({\n                url:\"/products/remove-from-cart\",\n                body:cartInfo,\n                method:\"POST\",\n            })\n        }),\n         // increase Cart product\n        increaseCartProduct:builder.mutation({\n            query:(body)=>({\n                url:\"/products/increase-cart\",\n                body,\n                method:\"POST\",\n            })\n        }),\n        // decrease Cart product\n        decreaseCartProduct:builder.mutation({\n            query:(body)=>({\n                url:\"/products/decrease-cart\",\n                body,\n                method:\"POST\",\n            })\n        }),\n        createOrder:builder.mutation({\n            query:(body)=>({\n                url:'/orders',\n                body,\n                method:\"POST\",\n            })\n        })\n\n    })\n})\n\n\nexport const {useSignupMutation,useLoginMutation,useCreateProductMutation,useAddToCartMutation,useDecreaseCartProductMutation,useIncreaseCartProductMutation,useRemoveFromCartMutation,useCreateOrderMutation,useDeleteProductMutation,useUpdateProductMutation}=appApi;\n\nexport default appApi;"],"mappings":"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"},"metadata":{},"sourceType":"module"}